#!/usr/bin/env python

# Proof of concept example of using the logfs api.
from dronin.logfs import LogFSImport

import collections
from xml.etree import ElementTree
from xml.etree.ElementTree import Element, SubElement, Comment, tostring
from xml.dom import minidom

from datetime import datetime

import argparse

parser = argparse.ArgumentParser(description="Import a logfs settings partition and convert to XML")
parser.add_argument('filename', metavar='filename.bin', help="the filename in which the settings dump is stored")
parser.add_argument('-g', dest='githash', metavar='githash', help="the githash to use to interpret the settings dump", default="next")

arg = parser.parse_args()

githash = arg.githash
srcfile = arg.filename

imported = LogFSImport(githash, file(srcfile, 'rb').read())

top = Element('uavobjects')

comment = Comment('Automatically generated by import.py')
top.append(comment)
comment = Comment('Imported from %s at %s' % (srcfile, datetime.utcnow()))
top.append(comment)
comment = Comment('Interpreted using githash %s' % (githash))
top.append(comment)

settings = SubElement(top, 'settings')

for obj_name in sorted(imported.keys()):
    exported_obj = imported[obj_name].to_xml_elem()
    settings.append(exported_obj)

def prettify(elem):
    """Return a pretty-printed XML string for the Element.
    """
    rough_string = ElementTree.tostring(elem, 'utf-8')
    reparsed = minidom.parseString(rough_string)
    return reparsed.toprettyxml(indent="  ")

print prettify(top)
